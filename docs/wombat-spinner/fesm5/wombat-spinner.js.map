{"version":3,"file":"wombat-spinner.js","sources":["ng://wombat-spinner/lib/spinner-overlay.component.ts","ng://wombat-spinner/lib/spinner.directive.ts","ng://wombat-spinner/lib/spinner.module.ts"],"sourcesContent":["import { Component, HostBinding, OnInit, Input, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n  selector: 'w-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss']\n})\nexport class SpinnerOverlayComponent implements OnInit {\n\n  @Input()\n  loading = true;\n\n  @HostBinding('class')\n  @Input()\n  spinClass = '';\n\n  @Input()\n  icon = 'fas fa-circle-notch fa-spin fa-5x';\n\n  _bodyTemplate: TemplateRef<any>;\n\n  get bodyTemplate(): TemplateRef<any> {\n    return this._bodyTemplate;\n  }\n\n  set bodyTemplate(tmpl: TemplateRef<any>) {\n    this._bodyTemplate = tmpl;\n  }\n\n  @Input('body')\n  set bodyInput(tmpl: TemplateRef<any>) {\n    if (tmpl) {\n      this.bodyTemplate = tmpl;\n    }\n  }\n\n  @ContentChild(TemplateRef, { static: false })\n  set bodyContent(tmpl: TemplateRef<any>) {\n    if (tmpl) {\n      this.bodyTemplate = tmpl;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, Input, TemplateRef, OnInit, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\nexport interface SpinOptions {\n  spinIcon?: string;\n  spinClass?: string;\n}\n\n@Directive({\n  selector: '[wSpinner]'\n})\nexport class SpinnerDirective implements OnInit {\n  _loading = true;\n  _spClass: string;\n  _spIcon: string;\n  _options: SpinOptions;\n  component: SpinnerOverlayComponent;\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n\n  @Input('wSpinnerOptions')\n  set options(opts: SpinOptions) {\n    this._options = opts;\n    this.syncOptions();\n  }\n\n  get options(): SpinOptions {\n    return this._options;\n  }\n\n  @Input('wSpinner')\n  set loading(state: boolean) {\n    if (state === undefined) { return; }\n    this._loading = state;\n    if (this.component) { this.component.loading = state; }\n  }\n\n  constructor(private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private resolver: ComponentFactoryResolver) {\n  }\n\n  syncOptions() {\n    if (!this.component) { return; }\n    if (!this.options) { return; }\n    if (this.options.spinClass) {\n      this.component.spinClass = this.options.spinClass;\n    }\n    if (this.options.spinIcon) {\n      this.component.icon = this.options.spinIcon;\n    }\n  }\n\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(SpinnerOverlayComponent);\n    const componentRef = this.viewContainerRef.createComponent(factory);\n    componentRef.instance.loading = this.loading;\n    componentRef.instance.bodyInput = this.templateRef;\n    this.component = componentRef.instance;\n    this.syncOptions();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\nimport { SpinnerDirective } from './spinner.directive';\nimport { CommonModule } from '@angular/common';\n\n// CommonModule to enable ngIf\n@NgModule({\n    imports: [\n      CommonModule\n    ],\n    providers: [\n    ],\n    declarations: [\n      SpinnerOverlayComponent, SpinnerDirective\n    ],\n    exports: [\n      SpinnerOverlayComponent, SpinnerDirective\n    ], entryComponents: [\n      SpinnerOverlayComponent\n    ]\n})\nexport class SpinnerModule {\n    constructor() {\n    }\n}\n"],"names":[],"mappings":"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"}