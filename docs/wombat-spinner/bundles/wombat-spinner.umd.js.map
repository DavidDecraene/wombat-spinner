{"version":3,"file":"wombat-spinner.umd.js","sources":["ng://wombat-spinner/lib/spinner-overlay.component.ts","ng://wombat-spinner/lib/spinner.directive.ts","ng://wombat-spinner/lib/spinner.module.ts"],"sourcesContent":["import { Component, HostBinding, OnInit, Input, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n  selector: 'w-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss']\n})\nexport class SpinnerOverlayComponent implements OnInit {\n\n  @Input()\n  loading = true;\n\n  @HostBinding('class')\n  @Input()\n  spinClass = '';\n\n  @Input()\n  icon = 'fas fa-circle-notch fa-spin fa-5x';\n\n  _bodyTemplate: TemplateRef<any>;\n\n  get bodyTemplate(): TemplateRef<any> {\n    return this._bodyTemplate;\n  }\n\n  set bodyTemplate(tmpl: TemplateRef<any>) {\n    this._bodyTemplate = tmpl;\n  }\n\n  @Input('body')\n  set bodyInput(tmpl: TemplateRef<any>) {\n    if (tmpl) {\n      this.bodyTemplate = tmpl;\n    }\n  }\n\n  @ContentChild(TemplateRef, { static: false })\n  set bodyContent(tmpl: TemplateRef<any>) {\n    if (tmpl) {\n      this.bodyTemplate = tmpl;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, Input, TemplateRef, OnInit, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\nexport interface SpinOptions {\n  spinIcon?: string;\n  spinClass?: string;\n}\n\n@Directive({\n  selector: '[wSpinner]'\n})\nexport class SpinnerDirective implements OnInit {\n  _loading = true;\n  _spClass: string;\n  _spIcon: string;\n  _options: SpinOptions;\n  component: SpinnerOverlayComponent;\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n\n  @Input('wSpinnerOptions')\n  set options(opts: SpinOptions) {\n    this._options = opts;\n    this.syncOptions();\n  }\n\n  get options(): SpinOptions {\n    return this._options;\n  }\n\n  @Input('wSpinner')\n  set loading(state: boolean) {\n    if (state === undefined) { return; }\n    this._loading = state;\n    if (this.component) { this.component.loading = state; }\n  }\n\n  constructor(private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private resolver: ComponentFactoryResolver) {\n  }\n\n  syncOptions() {\n    if (!this.component) { return; }\n    if (!this.options) { return; }\n    if (this.options.spinClass) {\n      this.component.spinClass = this.options.spinClass;\n    }\n    if (this.options.spinIcon) {\n      this.component.icon = this.options.spinIcon;\n    }\n  }\n\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(SpinnerOverlayComponent);\n    const componentRef = this.viewContainerRef.createComponent(factory);\n    componentRef.instance.loading = this.loading;\n    componentRef.instance.bodyInput = this.templateRef;\n    this.component = componentRef.instance;\n    this.syncOptions();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\nimport { SpinnerDirective } from './spinner.directive';\nimport { CommonModule } from '@angular/common';\n\n// CommonModule to enable ngIf\n@NgModule({\n    imports: [\n      CommonModule\n    ],\n    providers: [\n    ],\n    declarations: [\n      SpinnerOverlayComponent, SpinnerDirective\n    ],\n    exports: [\n      SpinnerOverlayComponent, SpinnerDirective\n    ], entryComponents: [\n      SpinnerOverlayComponent\n    ]\n})\nexport class SpinnerModule {\n    constructor() {\n    }\n}\n"],"names":["Component","Input","HostBinding","ContentChild","TemplateRef","Directive","ViewContainerRef","ComponentFactoryResolver","NgModule","CommonModule"],"mappings":"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"}